/*
 * Copyright (c) 2013-2014, Surfer Inc. and/or its affiliates. All rights reserved.
 * SURFERTANK INC. PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 * 
 * Initial Release by Leonardo Javier Belen
 *
 * File automatically generated by Antares. Do not change. 
 */
 function getFieldDisplayName(fieldId)
            {switch(fieldId)
            {case "aAmount":break;case "aPeriod":break;case "anUserCode":break;case "aConcept":break;case "aType":break;case "aAmount2":break;case "aPercent":break;case "anUserCode2":break;case "aConcept2":break;case "aCatalog":break;case "aClient":break;default: return fieldId;
            }
            }
        function evaluateDocument(doValidations) {validationResult=true;
                var
                someLabel=$("#fields\\[someLabel\\]").val();
                var
                aAmount=$("#fields\\[aAmount\\]").val();
                var
                aPeriod=$("#fields\\[aPeriod\\]").val();
                var
                anUserCode=$("#fields\\[anUserCode\\]").val();
                var
                aConcept=$("#fields\\[aConcept\\]").val();
                var
                aType=$("#fields\\[aType\\]").val();
                var
                aAmount2=$("#fields\\[aAmount2\\]").val();
                var
                anUserCode2=$("#fields\\[anUserCode2\\]").val();
                var
                aConcept2=$("#fields\\[aConcept2\\]").val();
                var
                aCatalog=$("#fields\\[aCatalog\\]").val();
                var
                aClient=$("#fields\\[aClient\\]").val();
                var
                aPercent=(aAmount2/2);
                $("#fields\\[aPercent\\]").val(aPercent);
                        if(doValidations == true){
                     
                     if(!(!isNaN(parseFloat(aAmount
                             ))  && isFinite(aAmount)))
                     {
                         validationResult=false;
                     }
                
                            if(aAmount<0){
                            renderMessage(getFieldDisplayName("aAmount")+ ": The number cannot be negative", "The number stated in the field " + getFieldDisplayName("aAmount")+ " cannot be negative", "error");
                            $(aAmount).focus();
                            validationResult=false;
                            }
                        
                     
                     if(!(!isNaN(parseFloat(aPeriod
                             ))  && isFinite(aPeriod)))
                     {
                         validationResult=false;
                     }
                
                            if(aPeriod<0){
                            renderMessage(getFieldDisplayName("aPeriod")+ ": The number cannot be negative", "The number stated in the field " + getFieldDisplayName("aPeriod")+ " cannot be negative", "error");
                            $(aPeriod).focus();
                            validationResult=false;
                            }
                        
                       if(!(!isNaN(parseFloat(aAmount2
                             ))  && isFinite(aAmount2)))
                     {
                         validationResult=false;
                     }
                if(aAmount2<0){
                                renderMessage(getFieldDisplayName("aAmount2")+ ": The number cannot be negative", "The number stated in the field " + getFieldDisplayName("aAmount2")+ " cannot be negative", "error");
                            $(aAmount2).focus();
                            validationResult=false;
                            }
                       if(!(!isNaN(parseFloat(aPercent
                             ))  && isFinite(aPercent)))
                     {
                         validationResult=false;
                     }
                }
            return validationResult;
            
            }
